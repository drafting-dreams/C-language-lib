#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main() {
	void mul(int a[], int b[], int c[], int x, int y);
	char c[205];
	int a[100] = { 0 }, b[100] = { 0 }, ch[200] = { 0 };
	int x = 0, y = 0, z = 0, t = 1;
	while (scanf("%c", c + z) != EOF) {
		if (c[z] == ' ') t = 2;
		else if (c[z] == '\n') {
			mul(a,b,ch,x,y);
			x = 0; y = 0; z = 0; t = 1;
		}
		else {
			if (t == 1) a[x++] = (int)c[z] - 48;
			else b[y++] = (int)c[z] - 48;
		}
		z++;
	}
	return 0;
}

void mul(int a[], int b[], int c[], int x, int y) {
	int ge, shi=0, cf = 0;
	x--;
	y--;
	for (int i = x; i >= 0; i--) {
		shi = 0;
		for (int j = y; j >= 0; j--) {
			ge = a[i] * b[j] % 10;
			if (ge + c[x + y - i - j] < 10)
				c[x + y - i - j] = ge + c[x + y - i - j];
			else {
				cf++;
				c[x + y - i - j] = (ge + c[x + y - i - j]) % 10;
			}
				if (shi) {
					if (c[x + y - i - j] + shi >= 10) cf++;
					c[x + y - i - j] = (c[x + y - i - j] + shi) % 10;
					shi = 0;
				}
				if (cf) {
					shi = a[i] * b[j] / 10 + cf;
					cf = 0;
				}
				else
					shi = a[i] * b[j] / 10;
				if (j == 0 && shi) { 
					c[x + y - i - j + 1] = shi;
					
				}
			}
		}
	
	if (shi)printf("%d", shi);
	for (int q = x + y; q >= 0; q--)
		printf("%d", c[q]);
	printf("\n");
	for (int i = 0; i < 100; i++) {
		a[i] = 0; b[i] = 0; c[i] = 0;
	}
	for (int i = 99; i < 200; i++) c[i] = 0;
}
